name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm run lint

      - name: Run type checking
        run: pnpm exec tsc --noEmit --skipLibCheck

      - name: Build plugin (development)
        run: pnpm run package:dev

      - name: Build plugin (production)
        run: pnpm run package

      - name: Verify build output
        run: |
          echo "üì¶ Build verification:"
          ls -la dist/

          # Check required files exist
          test -f dist/main.js || (echo "‚ùå main.js not found" && exit 1)
          test -f dist/manifest.json || (echo "‚ùå manifest.json not found" && exit 1)

          echo "‚úÖ All required files present"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == 18
        with:
          name: plugin-build-${{ github.sha }}
          path: dist/
          retention-days: 30
