name: Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.0.0)"
        required: true
        type: string

env:
  PLUGIN_NAME: obsidian-usage-stats

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npx tsc --noEmit --skipLibCheck

      - name: Build plugin
        run: npm run package

      - name: Get version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Update manifest version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}

          # Update manifest.json
          jq --arg version "$VERSION" '.version = $version' manifest.json > tmp.json && mv tmp.json manifest.json

          # Update package.json
          jq --arg version "$VERSION" '.version = $version' package.json > tmp.json && mv tmp.json package.json

          echo "Updated version to: $VERSION"

      - name: Rebuild with updated version
        run: npm run package

      - name: Create release archive
        run: |
          cd dist
          zip -r "../${{ env.PLUGIN_NAME }}-${{ steps.version.outputs.version }}.zip" .
          cd ..

      - name: Verify build output
        run: |
          echo "📦 Build artifacts:"
          ls -la dist/
          echo ""
          echo "📄 Archive contents:"
          unzip -l "${{ env.PLUGIN_NAME }}-${{ steps.version.outputs.version }}.zip"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## 🎉 Obsidian 使用统计插件 v${{ steps.version.outputs.version }}

            ### 📥 安装方法

            1. 下载下面的 `${{ env.PLUGIN_NAME }}-${{ steps.version.outputs.version }}.zip` 文件
            2. 在 Obsidian 中打开设置 → 第三方插件 → 已安装插件
            3. 点击"打开插件文件夹"
            4. 创建文件夹 `obsidian-usage-stats`
            5. 将压缩包内容解压到该文件夹
            6. 重新加载插件或重启 Obsidian
            7. 启用"Obtime"插件

            ### 📋 包含文件

            - `main.js` - 插件主要代码
            - `manifest.json` - 插件清单文件
            - `styles.css` - 样式文件
            - `usage-stats.css` - 使用统计样式
            - `view-styles.css` - 视图样式

            ### 🐛 问题反馈

            如遇到问题，请在 [Issues](https://github.com/${{ github.repository }}/issues) 中反馈。

            ---

            **完整更新日志请查看提交历史**
          draft: false
          prerelease: false

      - name: Upload Release Asset - Plugin ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}-${{ steps.version.outputs.version }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - main.js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/main.js
          asset_name: main.js
          asset_content_type: application/javascript

      - name: Upload Release Asset - manifest.json
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/manifest.json
          asset_name: manifest.json
          asset_content_type: application/json

      - name: Upload Release Asset - styles.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/styles.css
          asset_name: styles.css
          asset_content_type: text/css
        continue-on-error: true

      - name: Upload Release Asset - usage-stats.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/usage-stats.css
          asset_name: usage-stats.css
          asset_content_type: text/css
        continue-on-error: true

      - name: Upload Release Asset - view-styles.css
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/view-styles.css
          asset_name: view-styles.css
          asset_content_type: text/css
        continue-on-error: true
